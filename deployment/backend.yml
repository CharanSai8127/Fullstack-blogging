apiVersion: v1
kind: Service
metadata:
  name: app-green
  namespace: default
spec:
  selector:
    app: app-green
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-green
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-green
  template:
    metadata:
      labels:
        app: app-green
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "db-backend-role"
        vault.hashicorp.com/agent-inject-secret-db-creds: "secret/data/db"
        vault.hashicorp.com/agent-inject-template-db-creds: |
          {{- with secret "secret/data/db" -}}
          export DB_USERNAME="{{ .Data.data.username }}"
          export DB_PASSWORD="{{ .Data.data.password }}"
          export DB_DATABASE="{{ .Data.data.database }}"
          export DB_HOST="{{ .Data.data.host }}"
          export DB_PORT="{{ .Data.data.port }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-vault-addr: "http://vault-internal.vault.svc:8200"
    spec:
      serviceAccountName: vault-app-green
      initContainers:
        - name: wait-for-mysql
          image: busybox
          command:
            - sh
            - -c
            - >
              until nc -z $DB_HOST $DB_PORT; do echo "waiting for mysql"; sleep 2; done
      containers:
        - name: app
          image: charansait372/devops-blog-new
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - source /vault/secrets/db-creds && exec java -jar /app/app-green.jar
          ports:
            - containerPort: 8080
